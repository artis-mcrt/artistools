---
name: Benchmark with CodSpeed

on:
    push:
        branches:
            - main
    pull_request:
    workflow_dispatch:
    repository_dispatch:
        types: [trigger_checks]

jobs:
    codspeed-benchmarks:
        timeout-minutes: 180
        runs-on: ubuntu-24.04
        env:
            UV_FROZEN: 1

        name: codspeed benchmarks
        steps:
            - name: Checkout Code
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Setup uv
              uses: astral-sh/setup-uv@v6
              with:
                  activate-environment: true

            - name: Get python minor version
              run: |
                  echo "PYTHON_MINOR_VERSION=$(python -c 'import platform; print(platform.python_version_tuple()[1])')" >> $GITHUB_ENV
                  echo "PYO3_PYTHON=python3.$(python -c 'import platform; print(platform.python_version_tuple()[1])')" >> $GITHUB_ENV

            - name: Cache cargo and rust build
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      rust/target/
                  key: cargo-rust-target-${{ runner.os }}${{ runner.arch }}-python3.${{ env.PYTHON_MINOR_VERSION }}-${{ hashFiles('**/Cargo.lock') }}-${{
                      github.run_id }}
                  restore-keys: |
                      cargo-rust-target-${{ runner.os }}${{ runner.arch }}-python3.${{ env.PYTHON_MINOR_VERSION }}-${{ hashFiles('**/Cargo.lock') }}-
                      cargo-rust-target-${{ runner.os }}${{ runner.arch }}-python3.${{ env.PYTHON_MINOR_VERSION }}-
                      cargo-rust-target-${{ runner.os }}${{ runner.arch }}-

            - name: Install artistools
              run: |
                  rustup update stable
                  uv sync --frozen
                  uv pip install --compile-bytecode .

            - name: Cache test data
              uses: actions/cache@v4
              with:
                  enableCrossOsArchive: true
                  path: tests/data/*.tar.xz
                  key: testdata20231114

            - name: Download/extract test data
              working-directory: tests/data/
              run: source ./setuptestdata.sh

            - name: Run benchmarks
              uses: CodSpeedHQ/action@v4
              with:
                  mode: instrumentation
                  token: ${{ secrets.CODSPEED_TOKEN }}
                  run: pytest --codspeed
