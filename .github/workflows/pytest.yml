---
name: Installation and pytest

on:
    push:
    merge_group:
    schedule:
        - cron: '0 10 * * 2'
    #pull_request:
    workflow_dispatch:
    repository_dispatch:
        types: [trigger_checks]

jobs:
    pytest:
        timeout-minutes: 10
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                # os: [ubuntu-latest, macos-latest]
                os: [macos-14]
                python-version: ['3.10', '3.11', '3.12']
        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python-version }}

        name: pytest python${{ matrix.python-version }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install artistools
              run: |
                  python3 -m pip install --upgrade uv
                  uv venv
                  source .venv/bin/activate
                  echo "PATH=$PWD/.venv/bin:$PATH" >> $GITHUB_ENV
                  uv pip install -e .

            - name: Cache test data
              uses: actions/cache@v4
              with:
                  path: tests/data/*.tar.xz
                  key: testdata20231114

            - name: Download/extract test data
              working-directory: tests/data/
              run: source ./setuptestdata.sh

            - name: Check artistools command line tool
              run: |
                  .venv/bin/artistools --help
                  .venv/bin/artistools setupcompletions

            - name: Test with pytest
              run: |
                  source .venv/bin/activate
                  .venv/bin/pytest --cov=./ --cov-report=xml

            - name: Report coverage
              run: |
                  .venv/bin/coverage report

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage.xml
                  # directory: ./coverage/reports/
                  flags: unittests
                  env_vars: OS,PYTHON
                  name: codecov-umbrella
                  fail_ci_if_error: false
                  # path_to_write_report: ./coverage/codecov_report.txt
                  verbose: true
