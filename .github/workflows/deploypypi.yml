---
name: Build wheels and deploy to PyPI

on:
    release:
        types: [published, edited]
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    build_wheels:
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # macos-13 is an intel runner, macos-14 is apple silicon
                os: [ubuntu-latest, macos-13, macos-14]
            fail-fast: false
        env:
            CIBW_BEFORE_ALL_LINUX: curl -sSf https://sh.rustup.rs | sh -s -- -y
            CIBW_ENVIRONMENT_LINUX: 'PATH=$HOME/.cargo/bin:$PATH'
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install setuptools_scm
              if: matrix.os == 'macos-13' || matrix.os == 'macos-14'
              run: |
                  python3 -m pip install --upgrade --break-system-packages --user setuptools setuptools_scm[toml] setuptools-rust

            - name: Install setuptools_scm
              if: matrix.os != 'macos-13' && matrix.os != 'macos-14'
              run: |
                  python3 -m pip install --upgrade setuptools setuptools_scm[toml] setuptools-rust

            - name: Run setuptools_scm
              run: |
                  python3 -m setuptools_scm --strip-dev

            - name: Build wheels
              uses: pypa/cibuildwheel@v2.19.1

            - uses: actions/upload-artifact@v4
              with:
                  name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
                  path: ./wheelhouse/*.whl

    build_sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Run setuptools_scm
              run: |
                  python3 -m pip install --upgrade setuptools setuptools_scm[toml] setuptools-rust
                  python3 -m setuptools_scm --strip-dev

            - name: Build sdist
              run: pipx run build --sdist

            - uses: actions/upload-artifact@v4
              with:
                  name: cibw-sdist
                  path: dist/*.tar.gz

    upload_pypi:
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest
        environment: release
        permissions:
            id-token: write
        #if: github.event_name == 'release' && github.event.action == 'published'
        # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: actions/download-artifact@v4
              with:
                  # unpacks all CIBW artifacts into dist/
                  pattern: cibw-*
                  path: dist
                  merge-multiple: true

            - name: Run setuptools_scm
              run: |
                  python3 -m pip install --upgrade setuptools setuptools_scm[toml] setuptools-rust
                  python3 -m setuptools_scm --strip-dev

            - name: Publish package to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  skip-existing: false
                  verbose: false
